{"version":3,"sources":["services/arrayLength.js","components/Reader/Controls/Controls.js","components/Reader/Progress/Progress.js","components/Reader/Publication/Publication.js","components/Reader/Reader.js","components/App/App.js","index.js"],"names":["arrayLength","array","length","Controls","onPrevClick","onNextClick","nextBtnDisabled","prevBtnDisabled","type","onClick","disabled","Progress","currentPage","totalPages","Publication","title","text","Reader","state","publicationIndex","hanfleIncrement","items","props","setState","prevState","hanfleDecrement","this","publication","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"4OAEeA,EAFK,SAAAC,GAAK,OAAIA,EAAMC,QC0BpBC,EAvBE,SAAC,GAAD,IACfC,EADe,EACfA,YACAC,EAFe,EAEfA,YACAC,EAHe,EAGfA,gBACAC,EAJe,EAIfA,gBAJe,OAMf,iCACE,4BAAQC,KAAK,SAASC,QAASL,EAAaM,SAAUH,GAAtD,kCAGA,4BAAQC,KAAK,SAASC,QAASJ,EAAaK,SAAUJ,GAAtD,0CCDWK,EATE,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,WAAhB,OACf,qCAAOD,EAAP,YAAsBC,KCWTC,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OAClB,iCACE,4BAAKD,GACL,2BAAIC,KCCaC,E,2MAenBC,MAAQ,CAAEC,iBAAkB,G,EAE5BC,gBAAkB,WAAO,IACfD,EAAqB,EAAKD,MAA1BC,iBACAE,EAAU,EAAKC,MAAfD,MAEWrB,EAAYqB,GAEdF,EAAmB,GAClC,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1BL,iBAAkBK,EAAUL,iBAAmB,O,EAKrDM,gBAAkB,WACa,EAAKP,MAA1BC,kBAEgB,GACtB,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1BL,iBAAkBK,EAAUL,iBAAmB,O,wEAK3C,IACAE,EAAUK,KAAKJ,MAAfD,MACAF,EAAqBO,KAAKR,MAA1BC,iBACFQ,EAAcN,EAAMF,GAClBJ,EAAgBY,EAAhBZ,MAAOC,EAASW,EAATX,KAEf,OACE,6BACE,kBAAC,EAAD,CACEZ,YAAasB,KAAKD,gBAClBpB,YAAaqB,KAAKN,gBAClBb,gBAAsC,IAArBY,EACjBb,gBAAiBN,EAAYqB,KAAWF,EAAmB,IAE7D,kBAAC,EAAD,CACEP,YAAaO,EAAmB,EAChCN,WAAYb,EAAYqB,KAE1B,kBAAC,EAAD,CAAaN,MAAOA,EAAOC,KAAMA,S,GA1DLY,aAAfX,EACZY,aAAe,CACpBR,MAAO,I,WCHIS,EAFH,kBAAM,kBAAC,EAAD,CAAQT,MAAOA,K,MCCjCU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f8a983e6.chunk.js","sourcesContent":["const arrayLength = array => array.length;\n\nexport default arrayLength;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Controls = ({\n  onPrevClick,\n  onNextClick,\n  nextBtnDisabled,\n  prevBtnDisabled,\n}) => (\n  <section>\n    <button type=\"button\" onClick={onPrevClick} disabled={prevBtnDisabled}>\n      Назад\n    </button>\n    <button type=\"button\" onClick={onNextClick} disabled={nextBtnDisabled}>\n      Вперед\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  onPrevClick: PropTypes.func.isRequired,\n  onNextClick: PropTypes.func.isRequired,\n  nextBtnDisabled: PropTypes.bool.isRequired,\n  prevBtnDisabled: PropTypes.bool.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Progress = ({ currentPage, totalPages }) => (\n  <p>{`${currentPage}/${totalPages}`}</p>\n);\n\nProgress.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n};\n\nexport default Progress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Publication = ({ title, text }) => (\n  <article>\n    <h2>{title}</h2>\n    <p>{text}</p>\n  </article>\n);\n\nPublication.propTypes = {\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Publication;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport arrayLength from '../../services/arrayLength';\nimport Controls from './Controls/Controls';\nimport Progress from './Progress/Progress';\nimport Publication from './Publication/Publication';\n\nexport default class Reader extends Component {\n  static defaultProps = {\n    items: [],\n  };\n\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n      }).isRequired,\n    ),\n  };\n\n  state = { publicationIndex: 0 };\n\n  hanfleIncrement = () => {\n    const { publicationIndex } = this.state;\n    const { items } = this.props;\n\n    const maxCounter = arrayLength(items);\n\n    if (maxCounter > publicationIndex + 1) {\n      this.setState(prevState => ({\n        publicationIndex: prevState.publicationIndex + 1,\n      }));\n    }\n  };\n\n  hanfleDecrement = () => {\n    const { publicationIndex } = this.state;\n\n    if (publicationIndex >= 1) {\n      this.setState(prevState => ({\n        publicationIndex: prevState.publicationIndex - 1,\n      }));\n    }\n  };\n\n  render() {\n    const { items } = this.props;\n    const { publicationIndex } = this.state;\n    const publication = items[publicationIndex];\n    const { title, text } = publication;\n\n    return (\n      <div>\n        <Controls\n          onPrevClick={this.hanfleDecrement}\n          onNextClick={this.hanfleIncrement}\n          prevBtnDisabled={publicationIndex === 0}\n          nextBtnDisabled={arrayLength(items) === publicationIndex + 1}\n        />\n        <Progress\n          currentPage={publicationIndex + 1}\n          totalPages={arrayLength(items)}\n        />\n        <Publication title={title} text={text} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Reader from '../Reader/Reader';\nimport items from '../../data/publications.json';\n\nconst App = () => <Reader items={items} />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.module.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}